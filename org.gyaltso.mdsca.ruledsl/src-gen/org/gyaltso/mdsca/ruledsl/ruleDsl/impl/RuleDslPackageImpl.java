/**
 * generated by Xtext 2.23.0
 */
package org.gyaltso.mdsca.ruledsl.ruleDsl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.gyaltso.mdsca.ruledsl.ruleDsl.MethodLengthRule;
import org.gyaltso.mdsca.ruledsl.ruleDsl.MethodNameRule;
import org.gyaltso.mdsca.ruledsl.ruleDsl.MethodParamCountRule;
import org.gyaltso.mdsca.ruledsl.ruleDsl.Rule;
import org.gyaltso.mdsca.ruledsl.ruleDsl.RuleDslFactory;
import org.gyaltso.mdsca.ruledsl.ruleDsl.RuleDslPackage;
import org.gyaltso.mdsca.ruledsl.ruleDsl.RulesFile;
import org.gyaltso.mdsca.ruledsl.ruleDsl.TypeNameRule;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RuleDslPackageImpl extends EPackageImpl implements RuleDslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rulesFileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ruleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeNameRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodNameRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodLengthRuleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodParamCountRuleEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.gyaltso.mdsca.ruledsl.ruleDsl.RuleDslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private RuleDslPackageImpl()
  {
    super(eNS_URI, RuleDslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link RuleDslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static RuleDslPackage init()
  {
    if (isInited) return (RuleDslPackage)EPackage.Registry.INSTANCE.getEPackage(RuleDslPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredRuleDslPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    RuleDslPackageImpl theRuleDslPackage = registeredRuleDslPackage instanceof RuleDslPackageImpl ? (RuleDslPackageImpl)registeredRuleDslPackage : new RuleDslPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theRuleDslPackage.createPackageContents();

    // Initialize created meta-data
    theRuleDslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theRuleDslPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(RuleDslPackage.eNS_URI, theRuleDslPackage);
    return theRuleDslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRulesFile()
  {
    return rulesFileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRulesFile_MethodNameRule()
  {
    return (EReference)rulesFileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRulesFile_MethdLengthRule()
  {
    return (EReference)rulesFileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRulesFile_MethodNoOfParamsRule()
  {
    return (EReference)rulesFileEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRulesFile_TypeName()
  {
    return (EReference)rulesFileEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRule()
  {
    return ruleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRule_Name()
  {
    return (EAttribute)ruleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeNameRule()
  {
    return typeNameRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeNameRule_Format()
  {
    return (EAttribute)typeNameRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeNameRule_ApplyToPublic()
  {
    return (EAttribute)typeNameRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeNameRule_ApplyToProtected()
  {
    return (EAttribute)typeNameRuleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeNameRule_ApplyToPackage()
  {
    return (EAttribute)typeNameRuleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeNameRule_ApplyToPrivate()
  {
    return (EAttribute)typeNameRuleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodNameRule()
  {
    return methodNameRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_Format()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_AllowClassName()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_ApplyToPublic()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_ApplyToProtected()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_ApplyToPackage()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodNameRule_ApplyToPrivate()
  {
    return (EAttribute)methodNameRuleEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodLengthRule()
  {
    return methodLengthRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodLengthRule_Max()
  {
    return (EAttribute)methodLengthRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodLengthRule_CountEmpty()
  {
    return (EAttribute)methodLengthRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodParamCountRule()
  {
    return methodParamCountRuleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodParamCountRule_Max()
  {
    return (EAttribute)methodParamCountRuleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodParamCountRule_IgnoreOverriddenMethods()
  {
    return (EAttribute)methodParamCountRuleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RuleDslFactory getRuleDslFactory()
  {
    return (RuleDslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    rulesFileEClass = createEClass(RULES_FILE);
    createEReference(rulesFileEClass, RULES_FILE__METHOD_NAME_RULE);
    createEReference(rulesFileEClass, RULES_FILE__METHD_LENGTH_RULE);
    createEReference(rulesFileEClass, RULES_FILE__METHOD_NO_OF_PARAMS_RULE);
    createEReference(rulesFileEClass, RULES_FILE__TYPE_NAME);

    ruleEClass = createEClass(RULE);
    createEAttribute(ruleEClass, RULE__NAME);

    typeNameRuleEClass = createEClass(TYPE_NAME_RULE);
    createEAttribute(typeNameRuleEClass, TYPE_NAME_RULE__FORMAT);
    createEAttribute(typeNameRuleEClass, TYPE_NAME_RULE__APPLY_TO_PUBLIC);
    createEAttribute(typeNameRuleEClass, TYPE_NAME_RULE__APPLY_TO_PROTECTED);
    createEAttribute(typeNameRuleEClass, TYPE_NAME_RULE__APPLY_TO_PACKAGE);
    createEAttribute(typeNameRuleEClass, TYPE_NAME_RULE__APPLY_TO_PRIVATE);

    methodNameRuleEClass = createEClass(METHOD_NAME_RULE);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__FORMAT);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__ALLOW_CLASS_NAME);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__APPLY_TO_PUBLIC);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__APPLY_TO_PROTECTED);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__APPLY_TO_PACKAGE);
    createEAttribute(methodNameRuleEClass, METHOD_NAME_RULE__APPLY_TO_PRIVATE);

    methodLengthRuleEClass = createEClass(METHOD_LENGTH_RULE);
    createEAttribute(methodLengthRuleEClass, METHOD_LENGTH_RULE__MAX);
    createEAttribute(methodLengthRuleEClass, METHOD_LENGTH_RULE__COUNT_EMPTY);

    methodParamCountRuleEClass = createEClass(METHOD_PARAM_COUNT_RULE);
    createEAttribute(methodParamCountRuleEClass, METHOD_PARAM_COUNT_RULE__MAX);
    createEAttribute(methodParamCountRuleEClass, METHOD_PARAM_COUNT_RULE__IGNORE_OVERRIDDEN_METHODS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    typeNameRuleEClass.getESuperTypes().add(this.getRule());
    methodNameRuleEClass.getESuperTypes().add(this.getRule());
    methodLengthRuleEClass.getESuperTypes().add(this.getRule());
    methodParamCountRuleEClass.getESuperTypes().add(this.getRule());

    // Initialize classes and features; add operations and parameters
    initEClass(rulesFileEClass, RulesFile.class, "RulesFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRulesFile_MethodNameRule(), this.getRule(), null, "methodNameRule", null, 0, 1, RulesFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRulesFile_MethdLengthRule(), this.getRule(), null, "methdLengthRule", null, 0, 1, RulesFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRulesFile_MethodNoOfParamsRule(), this.getRule(), null, "methodNoOfParamsRule", null, 0, 1, RulesFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRulesFile_TypeName(), this.getRule(), null, "typeName", null, 0, 1, RulesFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ruleEClass, Rule.class, "Rule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRule_Name(), ecorePackage.getEString(), "name", null, 0, 1, Rule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeNameRuleEClass, TypeNameRule.class, "TypeNameRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeNameRule_Format(), ecorePackage.getEString(), "format", null, 0, 1, TypeNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeNameRule_ApplyToPublic(), ecorePackage.getEBoolean(), "applyToPublic", null, 0, 1, TypeNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeNameRule_ApplyToProtected(), ecorePackage.getEBoolean(), "applyToProtected", null, 0, 1, TypeNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeNameRule_ApplyToPackage(), ecorePackage.getEBoolean(), "applyToPackage", null, 0, 1, TypeNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTypeNameRule_ApplyToPrivate(), ecorePackage.getEBoolean(), "applyToPrivate", null, 0, 1, TypeNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodNameRuleEClass, MethodNameRule.class, "MethodNameRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethodNameRule_Format(), ecorePackage.getEString(), "format", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodNameRule_AllowClassName(), ecorePackage.getEBoolean(), "allowClassName", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodNameRule_ApplyToPublic(), ecorePackage.getEBoolean(), "applyToPublic", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodNameRule_ApplyToProtected(), ecorePackage.getEBoolean(), "applyToProtected", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodNameRule_ApplyToPackage(), ecorePackage.getEBoolean(), "applyToPackage", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodNameRule_ApplyToPrivate(), ecorePackage.getEBoolean(), "applyToPrivate", null, 0, 1, MethodNameRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodLengthRuleEClass, MethodLengthRule.class, "MethodLengthRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethodLengthRule_Max(), ecorePackage.getEInt(), "max", null, 0, 1, MethodLengthRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodLengthRule_CountEmpty(), ecorePackage.getEBoolean(), "countEmpty", null, 0, 1, MethodLengthRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodParamCountRuleEClass, MethodParamCountRule.class, "MethodParamCountRule", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethodParamCountRule_Max(), ecorePackage.getEInt(), "max", null, 0, 1, MethodParamCountRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodParamCountRule_IgnoreOverriddenMethods(), ecorePackage.getEBoolean(), "ignoreOverriddenMethods", null, 0, 1, MethodParamCountRule.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //RuleDslPackageImpl
