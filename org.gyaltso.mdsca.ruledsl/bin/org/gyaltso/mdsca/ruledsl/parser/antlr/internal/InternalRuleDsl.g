/*
 * generated by Xtext 2.23.0
 */
grammar InternalRuleDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.gyaltso.mdsca.ruledsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.gyaltso.mdsca.ruledsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.gyaltso.mdsca.ruledsl.services.RuleDslGrammarAccess;

}

@parser::members {

 	private RuleDslGrammarAccess grammarAccess;

    public InternalRuleDslParser(TokenStream input, RuleDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RulesFile";
   	}

   	@Override
   	protected RuleDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRulesFile
entryRuleRulesFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulesFileRule()); }
	iv_ruleRulesFile=ruleRulesFile
	{ $current=$iv_ruleRulesFile.current; }
	EOF;

// Rule RulesFile
ruleRulesFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesFileAccess().getMethodNameRuleMethodNameRuleParserRuleCall_0_0());
				}
				lv_methodNameRule_0_0=ruleMethodNameRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesFileRule());
					}
					set(
						$current,
						"methodNameRule",
						lv_methodNameRule_0_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.MethodNameRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesFileAccess().getMethdLengthRuleMethodLengthRuleParserRuleCall_1_0());
				}
				lv_methdLengthRule_1_0=ruleMethodLengthRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesFileRule());
					}
					set(
						$current,
						"methdLengthRule",
						lv_methdLengthRule_1_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.MethodLengthRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesFileAccess().getMethodNoOfParamsRuleMethodParamCountRuleParserRuleCall_2_0());
				}
				lv_methodNoOfParamsRule_2_0=ruleMethodParamCountRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesFileRule());
					}
					set(
						$current,
						"methodNoOfParamsRule",
						lv_methodNoOfParamsRule_2_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.MethodParamCountRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRulesFileAccess().getTypeNameTypeNameRuleParserRuleCall_3_0());
				}
				lv_typeName_3_0=ruleTypeNameRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulesFileRule());
					}
					set(
						$current,
						"typeName",
						lv_typeName_3_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.TypeNameRule");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTypeNameRule
entryRuleTypeNameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRuleRule()); }
	iv_ruleTypeNameRule=ruleTypeNameRule
	{ $current=$iv_ruleTypeNameRule.current; }
	EOF;

// Rule TypeNameRule
ruleTypeNameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTypeNameRuleAccess().getTypeNameRuleAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='TypeName'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeNameRuleAccess().getNameTypeNameKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "TypeName");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeNameRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='format'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeNameRuleAccess().getFormatKeyword_3());
		}
		(
			(
				lv_format_4_0=RULE_STRING
				{
					newLeafNode(lv_format_4_0, grammarAccess.getTypeNameRuleAccess().getFormatSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"format",
						lv_format_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='applyToPublic'
		{
			newLeafNode(otherlv_5, grammarAccess.getTypeNameRuleAccess().getApplyToPublicKeyword_5());
		}
		(
			(
				lv_applyToPublic_6_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPublic_6_0, grammarAccess.getTypeNameRuleAccess().getApplyToPublicBOOLEANTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPublic",
						lv_applyToPublic_6_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_7='applyToProtected'
		{
			newLeafNode(otherlv_7, grammarAccess.getTypeNameRuleAccess().getApplyToProtectedKeyword_7());
		}
		(
			(
				lv_applyToProtected_8_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToProtected_8_0, grammarAccess.getTypeNameRuleAccess().getApplyToProtectedBOOLEANTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToProtected",
						lv_applyToProtected_8_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_9='applyToPackage'
		{
			newLeafNode(otherlv_9, grammarAccess.getTypeNameRuleAccess().getApplyToPackageKeyword_9());
		}
		(
			(
				lv_applyToPackage_10_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPackage_10_0, grammarAccess.getTypeNameRuleAccess().getApplyToPackageBOOLEANTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPackage",
						lv_applyToPackage_10_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_11='applyToPrivate'
		{
			newLeafNode(otherlv_11, grammarAccess.getTypeNameRuleAccess().getApplyToPrivateKeyword_11());
		}
		(
			(
				lv_applyToPrivate_12_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPrivate_12_0, grammarAccess.getTypeNameRuleAccess().getApplyToPrivateBOOLEANTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPrivate",
						lv_applyToPrivate_12_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getTypeNameRuleAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleMethodNameRule
entryRuleMethodNameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRuleRule()); }
	iv_ruleMethodNameRule=ruleMethodNameRule
	{ $current=$iv_ruleMethodNameRule.current; }
	EOF;

// Rule MethodNameRule
ruleMethodNameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodNameRuleAccess().getMethodNameRuleAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='MethodNameRule'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodNameRuleAccess().getNameMethodNameRuleKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "MethodNameRule");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodNameRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='format'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodNameRuleAccess().getFormatKeyword_3());
		}
		(
			(
				lv_format_4_0=RULE_STRING
				{
					newLeafNode(lv_format_4_0, grammarAccess.getMethodNameRuleAccess().getFormatSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"format",
						lv_format_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='allowClassName'
		{
			newLeafNode(otherlv_5, grammarAccess.getMethodNameRuleAccess().getAllowClassNameKeyword_5());
		}
		(
			(
				lv_allowClassName_6_0=RULE_BOOLEAN
				{
					newLeafNode(lv_allowClassName_6_0, grammarAccess.getMethodNameRuleAccess().getAllowClassNameBOOLEANTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"allowClassName",
						lv_allowClassName_6_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_7='applyToPublic'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodNameRuleAccess().getApplyToPublicKeyword_7());
		}
		(
			(
				lv_applyToPublic_8_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPublic_8_0, grammarAccess.getMethodNameRuleAccess().getApplyToPublicBOOLEANTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPublic",
						lv_applyToPublic_8_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_9='applyToProtected'
		{
			newLeafNode(otherlv_9, grammarAccess.getMethodNameRuleAccess().getApplyToProtectedKeyword_9());
		}
		(
			(
				lv_applyToProtected_10_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToProtected_10_0, grammarAccess.getMethodNameRuleAccess().getApplyToProtectedBOOLEANTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToProtected",
						lv_applyToProtected_10_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_11='applyToPackage'
		{
			newLeafNode(otherlv_11, grammarAccess.getMethodNameRuleAccess().getApplyToPackageKeyword_11());
		}
		(
			(
				lv_applyToPackage_12_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPackage_12_0, grammarAccess.getMethodNameRuleAccess().getApplyToPackageBOOLEANTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPackage",
						lv_applyToPackage_12_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_13='applyToPrivate'
		{
			newLeafNode(otherlv_13, grammarAccess.getMethodNameRuleAccess().getApplyToPrivateKeyword_13());
		}
		(
			(
				lv_applyToPrivate_14_0=RULE_BOOLEAN
				{
					newLeafNode(lv_applyToPrivate_14_0, grammarAccess.getMethodNameRuleAccess().getApplyToPrivateBOOLEANTerminalRuleCall_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodNameRuleRule());
					}
					setWithLastConsumed(
						$current,
						"applyToPrivate",
						lv_applyToPrivate_14_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getMethodNameRuleAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleMethodLengthRule
entryRuleMethodLengthRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodLengthRuleRule()); }
	iv_ruleMethodLengthRule=ruleMethodLengthRule
	{ $current=$iv_ruleMethodLengthRule.current; }
	EOF;

// Rule MethodLengthRule
ruleMethodLengthRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodLengthRuleAccess().getMethodLengthRuleAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='MethodLengthRule'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodLengthRuleAccess().getNameMethodLengthRuleKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodLengthRuleRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "MethodLengthRule");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodLengthRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='max'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodLengthRuleAccess().getMaxKeyword_3());
		}
		(
			(
				lv_max_4_0=RULE_INT
				{
					newLeafNode(lv_max_4_0, grammarAccess.getMethodLengthRuleAccess().getMaxINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodLengthRuleRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='countEmpty'
		{
			newLeafNode(otherlv_5, grammarAccess.getMethodLengthRuleAccess().getCountEmptyKeyword_5());
		}
		(
			(
				lv_countEmpty_6_0=RULE_BOOLEAN
				{
					newLeafNode(lv_countEmpty_6_0, grammarAccess.getMethodLengthRuleAccess().getCountEmptyBOOLEANTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodLengthRuleRule());
					}
					setWithLastConsumed(
						$current,
						"countEmpty",
						lv_countEmpty_6_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodLengthRuleAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMethodParamCountRule
entryRuleMethodParamCountRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodParamCountRuleRule()); }
	iv_ruleMethodParamCountRule=ruleMethodParamCountRule
	{ $current=$iv_ruleMethodParamCountRule.current; }
	EOF;

// Rule MethodParamCountRule
ruleMethodParamCountRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMethodParamCountRuleAccess().getMethodParamCountRuleAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='MethodParamLengthRule'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodParamCountRuleAccess().getNameMethodParamLengthRuleKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodParamCountRuleRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "MethodParamLengthRule");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodParamCountRuleAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='max'
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodParamCountRuleAccess().getMaxKeyword_3());
		}
		(
			(
				lv_max_4_0=RULE_INT
				{
					newLeafNode(lv_max_4_0, grammarAccess.getMethodParamCountRuleAccess().getMaxINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodParamCountRuleRule());
					}
					setWithLastConsumed(
						$current,
						"max",
						lv_max_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='ignoreOverriddenMethods'
		{
			newLeafNode(otherlv_5, grammarAccess.getMethodParamCountRuleAccess().getIgnoreOverriddenMethodsKeyword_5());
		}
		(
			(
				lv_ignoreOverriddenMethods_6_0=RULE_BOOLEAN
				{
					newLeafNode(lv_ignoreOverriddenMethods_6_0, grammarAccess.getMethodParamCountRuleAccess().getIgnoreOverriddenMethodsBOOLEANTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodParamCountRuleRule());
					}
					setWithLastConsumed(
						$current,
						"ignoreOverriddenMethods",
						lv_ignoreOverriddenMethods_6_0,
						"org.gyaltso.mdsca.ruledsl.RuleDsl.BOOLEAN");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodParamCountRuleAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
